{"version":3,"sources":["assets/icon/checkCircleBlue.svg","assets/icon/checkCircleGrey.svg","assets/logo/binus.png","assets/logo/sma3.png","assets/profile.jpeg","assets/icon/chevron.svg","assets/logo/hacktiv8.png","assets/logo/goacademy.png","assets/logo/freecodecamp.jpeg","assets/logo/google-digital-garage.svg","logo.svg","component/Button/ContactButton/ContactButton.jsx","component/HeaderCard/HeaderCard.jsx","component/SkillsCard/SkillText/SkillText.jsx","component/SkillsCard/SkillsCard.jsx","component/Text/SectionTitle/SectionTitle.jsx","component/CertificationList/CertificationCard/CertificationCard.jsx","component/CertificationList/CertificationList.jsx","component/EducationList/EducationCard/EducationCard.jsx","component/EducationList/EducationList.jsx","component/ExperienceList/ExperienceCard/ExperienceCard.jsx","component/ExperienceList/ExperienceList.jsx","screen/MainScreen/MainScreen.jsx","screen/PhoneScreen/PhoneScreen.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ContactButton","text","className","HeaderCard","useState","wrapperRef","React","createRef","ref","src","ProfilePicture","alt","SkillText","skill","scale","items","i","push","key","data","SkillsCard","toggle","setToggle","chevronRef","onClick","wrapper","current","chevron","classList","handleClick","map","index","SectionTitle","CertificationCard","logo","content","year","containerRef","handleMouse","e","onMouseDown","onMouseUp","checkCircleSvgGrey","checkCircleSvgBlue","Hacktiv8","GoAcademy","FreeCodeCamp","GoogleDigitalGarage","CertificationList","item","EducationCard","title","subtitle","Binus","Sma3","EducationList","reverseScroll","ExperienceCard","location","titleRef","ExperienceList","MainScreen","PhoneScreen","unselectable","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4da4b543.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkCircleBlue.e3b98a7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkCircleGrey.b8ea6971.svg\";","module.exports = __webpack_public_path__ + \"static/media/binus.5beba95b.png\";","module.exports = __webpack_public_path__ + \"static/media/sma3.7c602c1b.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.f8bc6959.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/chevron.c411f3e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/hacktiv8.ef44cf88.png\";","module.exports = __webpack_public_path__ + \"static/media/goacademy.783d469d.png\";","module.exports = __webpack_public_path__ + \"static/media/freecodecamp.4321549a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/google-digital-garage.8d473b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./ContactButton.css\";\r\n\r\nconst ContactButton = ({ text }) => {\r\n  return <div className={\"button-contact-container\"}>Contact Now</div>;\r\n};\r\n\r\nexport default ContactButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ProfilePicture from \"./../../assets/profile.jpeg\";\r\nimport \"./HeaderCard.css\";\r\nimport ContactButton from \"../Button/ContactButton/ContactButton\";\r\n\r\nconst HeaderCard = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const wrapperRef = React.createRef();\r\n\r\n  function handleClick() {\r\n    // const wrapper = wrapperRef.current;\r\n    // wrapper.classList.toggle(\"card-header-open\");\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\"card-header-container\"}\r\n      // onClick={() => handleClick()}\r\n      ref={wrapperRef}\r\n    >\r\n      <div className=\"card-header-top\">\r\n        <div className=\"card-header-photo-container\">\r\n          <img\r\n            src={ProfilePicture}\r\n            alt=\"profile\"\r\n            className=\"card-header-profile\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"card-header-name\">Nathan Priyasadie</div>\r\n          <div className=\"card-header-role\">Front/Mobile Engineer</div>\r\n          <div className=\"card-header-role\">Student</div>\r\n          <div className=\"card-header-location\">Jakarta, Indonesia</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-header-content\">\r\n        Aspiring Software Engineer, Passionate in Product and User Experience\r\n      </div>\r\n      <ContactButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./SkillText.css\";\r\n\r\nconst SCALE_MAX = 5;\r\n\r\nconst SkillText = ({ skill, scale }) => {\r\n  const items = [];\r\n  for (let i = 0; i < SCALE_MAX; i++) {\r\n    if (i < scale) {\r\n      items.push(<div className=\"skill-scale-on\" key={i} />);\r\n    } else {\r\n      items.push(<div className=\"skill-scale-off\" key={i} />);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"skill-container\">\r\n      <div className=\"skill-text\">{skill}</div>\r\n      <div>\r\n        <div className=\"skill-scale-container\">{items}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillText;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SkillText from \"./SkillText/SkillText\";\r\nimport \"./SkillsCard.css\";\r\n\r\nimport chevron from \"./../../assets/icon/chevron.svg\";\r\n\r\nconst data = [\r\n  { skill: \"HTML\", scale: 5 },\r\n  { skill: \"CSS\", scale: 5 },\r\n  { skill: \"Javascript\", scale: 4 },\r\n  { skill: \"React\", scale: 4 },\r\n  { skill: \"React Native\", scale: 4 },\r\n  { skill: \"SASS\", scale: 3 },\r\n  { skill: \"Laravel\", scale: 2 }\r\n];\r\n\r\nconst SkillsCard = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const wrapperRef = React.createRef();\r\n  const chevronRef = React.createRef();\r\n  function handleClick() {\r\n    const wrapper = wrapperRef.current;\r\n    const chevron = chevronRef.current;\r\n    wrapper.classList.toggle(\"card-skills-open\");\r\n    chevron.classList.toggle(\"chevron-open\");\r\n    setToggle(!toggle);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"card-skills-container\"\r\n      onClick={() => handleClick()}\r\n      ref={wrapperRef}\r\n    >\r\n      <div className=\"card-skills-top\">\r\n        <div>Skills</div>\r\n        <img src={chevron} className=\"chevron\" ref={chevronRef} />\r\n      </div>\r\n\r\n      <div className=\"card-skills-content\">\r\n        {data.map(({ skill, scale }, index) => {\r\n          return <SkillText key={index} skill={skill} scale={scale} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillsCard;\r\n","import React from \"react\";\r\nimport \"./SectionTitle.css\";\r\n\r\nconst SectionTitle = ({ text }) => {\r\n  return <div className=\"section-title\">{text}</div>;\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React, { useState } from \"react\";\r\nimport checkCircleSvgBlue from \"./../../../assets/icon/checkCircleBlue.svg\";\r\nimport checkCircleSvgGrey from \"./../../../assets/icon/checkCircleGrey.svg\";\r\nimport \"./CertificationCard.css\";\r\n\r\nconst CertificationCard = ({ text, logo, content, year }) => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const containerRef = React.createRef();\r\n\r\n  function handleMouse(e) {\r\n    const container = containerRef.current;\r\n    container.classList.toggle(\"card-certification-container-open\");\r\n  }\r\n  return (\r\n    <div\r\n      className=\"card-certification-container\"\r\n      onMouseDown={(e) => handleMouse(e)}\r\n      onMouseUp={(e) => handleMouse(e)}\r\n      onClick={() => setToggle(!toggle)}\r\n      ref={containerRef}\r\n    >\r\n      <div className=\"card-certification-top\">\r\n        <div className=\"card-certification-left\">\r\n          <img src={logo} alt=\"logo\" className=\"certification-logo\" />\r\n          <div>{text}</div>\r\n        </div>\r\n        {toggle ? (\r\n          <img src={checkCircleSvgGrey} alt=\"check\" className=\"checkCircle\" />\r\n        ) : (\r\n          <img src={checkCircleSvgBlue} alt=\"check\" className=\"checkCircle\" />\r\n        )}\r\n      </div>\r\n      <div className=\"card-certification-content\">{content}</div>\r\n      <div className=\"card-certification-bottom\">\r\n        <div>{year}</div>\r\n        <div className=\"card-certification-credential\">see credential</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CertificationCard;\r\n","import React from \"react\";\r\nimport CertificationCard from \"./CertificationCard/CertificationCard\";\r\nimport Hacktiv8 from \"./../../assets/logo/hacktiv8.png\";\r\nimport GoAcademy from \"./../../assets/logo/goacademy.png\";\r\nimport FreeCodeCamp from \"./../../assets/logo/freecodecamp.jpeg\";\r\nimport GoogleDigitalGarage from \"./../../assets/logo/google-digital-garage.svg\";\r\n\r\nconst data = [\r\n  {\r\n    text: \"React and React Native\",\r\n    logo: Hacktiv8,\r\n    content:\r\n      \"Learn JavaScript, React, React Native and managing component state with redux\",\r\n    year: \"2019\"\r\n  },\r\n  {\r\n    text: \"Go Academy x BNCC\",\r\n    logo: GoAcademy,\r\n    content:\r\n      \"Understanding of TDD, Clean Code, OOP Principles, CI/CD, and Agile Principles\",\r\n    year: \"2019\"\r\n  },\r\n  {\r\n    text: \"Responsive Web Design\",\r\n    logo: FreeCodeCamp,\r\n    content: \"Learn HTML, CSS for Developing Responsive Web Design\",\r\n    year: \"2019\"\r\n  },\r\n  {\r\n    text: \"The Fundamentals of Digital Marketing\",\r\n    logo: GoogleDigitalGarage,\r\n    content:\r\n      \"Learn Fundamentals of Digital Marketing, How to Optimize Website on Google Search Engine\",\r\n    year: \"2019\"\r\n  }\r\n];\r\n\r\nconst CertificationList = () => {\r\n  return data.map((item, index) => {\r\n    return <CertificationCard key={index} {...item} />;\r\n  });\r\n};\r\n\r\nexport default CertificationList;\r\n","import React, { useState } from \"react\";\r\nimport \"./EducationCard.css\";\r\n\r\nconst EducationCard = ({ title, subtitle, logo, year }) => {\r\n  return (\r\n    <div className=\"card-education-container\">\r\n      <img src={logo} alt=\"logo\" className=\"education-logo\" />\r\n      <div className=\"card-education-right\">\r\n        <div className=\"card-education-title\">{title}</div>\r\n        <div className=\"card-education-subtitle\">{subtitle}</div>\r\n        <div className=\"card-education-year\">{year}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EducationCard;\r\n","import React, { useState } from \"react\";\r\nimport HorizontalScroll from \"react-scroll-horizontal\";\r\nimport EducationCard from \"./EducationCard/EducationCard\";\r\nimport Binus from \"./../../assets/logo/binus.png\";\r\nimport Sma3 from \"./../../assets/logo/sma3.png\";\r\nimport \"./EducationList.css\";\r\n\r\nconst data = [\r\n  {\r\n    title: \"Bina Nusantara University\",\r\n    subtitle: \"Master Track Computer Science\",\r\n    year: \"Present - 2017\",\r\n    logo: Binus,\r\n  },\r\n  {\r\n    title: \"SMA 3 Teladan Jakarta\",\r\n    subtitle: \"Science\",\r\n    logo: Sma3,\r\n    year: \"2017 - 2014\",\r\n  },\r\n];\r\n\r\nconst EducationList = () => {\r\n  return (\r\n    <div className=\"education-list-container\">\r\n      <HorizontalScroll reverseScroll={true}>\r\n        {data.map((item, index) => {\r\n          return <EducationCard key={index} {...item} />;\r\n        })}\r\n      </HorizontalScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EducationList;\r\n","import React, { useState } from \"react\";\r\nimport checkCircleSvgBlue from \"./../../../assets/icon/checkCircleBlue.svg\";\r\nimport checkCircleSvgGrey from \"./../../../assets/icon/checkCircleGrey.svg\";\r\nimport \"./ExperienceCard.css\";\r\n\r\nconst ExperienceCard = ({ title, location, content }) => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const containerRef = React.createRef();\r\n  const titleRef = React.createRef();\r\n\r\n  function handleMouse(e) {\r\n    containerRef.current.classList.toggle(\"card-experience-container-open\");\r\n    titleRef.current.classList.toggle(\"card-experience-title-open\");\r\n    setToggle(!toggle);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"card-experience-container\"\r\n      ref={containerRef}\r\n      onClick={(e) => handleMouse(e)}\r\n    >\r\n      <div className=\"card-experience-top\">\r\n        {toggle ? (\r\n          <img\r\n            src={checkCircleSvgBlue}\r\n            alt=\"check\"\r\n            className=\"checkCircle experience-check\"\r\n          />\r\n        ) : (\r\n          <img\r\n            src={checkCircleSvgGrey}\r\n            alt=\"check\"\r\n            className=\"checkCircle experience-check\"\r\n          />\r\n        )}\r\n        <div className=\"card-experience-right\">\r\n          <div className=\"card-experience-title\" ref={titleRef}>\r\n            {title}\r\n          </div>\r\n          <div className=\"card-experience-subtitle\">{location}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-experience-bottom\">{content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperienceCard;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ExperienceCard from \"./ExperienceCard/ExperienceCard\";\r\nimport Binus from \"./../../assets/logo/binus.png\";\r\nimport Sma3 from \"./../../assets/logo/sma3.png\";\r\nimport \"./ExperienceList.css\";\r\n\r\nconst data = [\r\n  {\r\n    title: \"Mobile Engineer\",\r\n    location: \"Forky.id\",\r\n    content:\r\n      \"Develop mobile app with react native and integrate it with backend using redux saga\",\r\n  },\r\n  {\r\n    title: \"HRD Manager\",\r\n    location: \"Bina Nusantara Computer Club\",\r\n    content: \"Manage a subdivision that handle over 70 members\",\r\n  },\r\n  {\r\n    title: \"Activist\",\r\n    location: \"Bina Nusantara Computer Club\",\r\n    content: \"Manage a subdivision that handle over 70 members\",\r\n  },\r\n];\r\n\r\nconst ExperienceList = () => {\r\n  return (\r\n    <div>\r\n      {data.map((item) => {\r\n        return <ExperienceCard {...item} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperienceList;\r\n","import React from \"react\";\r\nimport \"./MainScreen.css\";\r\nimport HeaderCard from \"./../../component/HeaderCard/HeaderCard\";\r\nimport SkillsCard from \"./../../component/SkillsCard/SkillsCard\";\r\nimport SectionTitle from \"./../../component/Text/SectionTitle/SectionTitle\";\r\nimport CertificationList from \"../../component/CertificationList/CertificationList\";\r\nimport EducationList from \"../../component/EducationList/EducationList\";\r\nimport ExperienceList from \"../../component/ExperienceList/ExperienceList\";\r\n\r\nconst MainScreen = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <HeaderCard />\r\n      <SkillsCard />\r\n      <SectionTitle text={\"Certification\"} />\r\n      <CertificationList />\r\n      <SectionTitle text={\"Educations\"} />\r\n      <EducationList />\r\n      <SectionTitle text={\"Experiences\"} />\r\n      <ExperienceList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","import React, { useState } from \"react\";\r\nimport MainScreen from \"./../MainScreen/MainScreen\";\r\nimport \"./PhoneScreen.css\";\r\n\r\nconst PhoneScreen = () => {\r\n  return (\r\n    <header className=\"background\">\r\n      <div className=\"circle-bottom\" />\r\n      <div className=\"circle-top\" />\r\n      <div className=\"square-top\" />\r\n      <div className=\"square-bottom\" />\r\n      <div className=\"wrapper\" unselectable=\"on\">\r\n        <MainScreen />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PhoneScreen;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PhoneScreen from \"./screen/PhoneScreen/PhoneScreen\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PhoneScreen />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}